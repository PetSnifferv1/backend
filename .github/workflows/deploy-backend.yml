name: Deploy Backend to AWS

on:
  push:
    branches:
      - main
    paths:

      - 'backend/**' ### Teste Actions
      - '.github/workflows/deploy-backend.yml'
      - 'backend/Dockerfile'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # Configuração das credenciais AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Login no ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Construção e push da imagem Docker para o ECR
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          DB_USER_PROD: ${{ secrets.DB_USER_PROD }}
          DB_PASS_PROD: ${{ secrets.DB_PASS_PROD }}



        run: |

          ls -R .   # Debug opcional
          
          docker build . --no-cache -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
          --build-arg DB_USER_PROD=$DB_USER_PROD \
          --build-arg DB_PASS_PROD=$DB_PASS_PROD \
          --build-arg SPRING_PROFILES_ACTIVE=prod
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest          
          
#         docker build . -t $REGISTRY/$REPOSITORY:$IMAGE_TAG